# -*- mode: Python; -*- scons script

import os, platform, shutil

Import('env')

def copyLibBuilder( target, source, env):
   '''kopiuje biblioteke'''
   shutil.copy( str(source[0]), str(target[0]) )
   return

#sciezki
env.Append( ENV = {'PATH' : os.environ['PATH'] })
print(env)
if(platform.system() == "Linux"):
    env.Append( CPPFLAGS = '-Wall -pedantic -pthread -Wno-long-long' )
    env.Append( LINKFLAGS = '-Wall -pthread' )
    env.Append( CPPPATH = ['/usr/include/python3.6m'] )
    env.Append( LIBPATH = ['/usr/lib/python3.6'] )
    env.Append( LIBS = [ 'boost_python3' ] )
elif(platform.system() == "Windows"):
   env.Append( CPPPATH = [ Dir('C:/Boost/include/boost-1_66'), #path to boost include
                           Dir('C:/Python36/include'), #path to python include
                           Dir('C:/usr/local/include') ] ) #path to mt4cpp include
   env.Append( LIBPATH = [ Dir('C:/Boost/lib'), #path to boost libs
                           Dir('C:/Python36/libs'),
                           Dir('.') ] ) #path to python libs

   env.Append( CPPFLAGS = ' /EHsc /MD /D "WIN32" /D "_CONSOLE" /W4' )
   env.Append( LINKFLAGS = ' /SUBSYSTEM:WINDOWS ' )
else:
   print(platform.system() + " not supported")

#add export flag to DLL build environment
env_dll = env.Clone()
if(platform.system() == "Linux"):
   pass
elif(platform.system() == "Windows"):
   env_dll.Append( CPPFLAGS = ' /D "CALC_EXPORTS" ')

#build C++ library
cpplib = env_dll.SharedLibrary( target = 'primeness', source = ['src/primeness.cpp', 'src/prime.cpp'])
if(platform.system() == "Linux"):
   target = '../build_web/prime/primeness.so'
elif(platform.system() == "Windows"):
   target = '../build_web/prime/primeness.pyd'
env.Command(target, cpplib, copyLibBuilder )
